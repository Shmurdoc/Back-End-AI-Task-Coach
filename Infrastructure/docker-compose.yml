version: '3.8'

services:
  webapi:
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=AITaskCoach;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;
      - ConnectionStrings__Redis=redis:6379
      - Email__Host=smtp.gmail.com
      - Email__Port=587
      - Email__Username=${EMAIL_USERNAME}
      - Email__Password=${EMAIL_PASSWORD}
      - Email__FromAddress=noreply@aitaskcoach.com
      - Email__FromName=AI Task Coach
      - Twilio__AccountSid=${TWILIO_ACCOUNT_SID}
      - Twilio__AuthToken=${TWILIO_AUTH_TOKEN}
      - Twilio__FromNumber=${TWILIO_FROM_NUMBER}
      - OpenAI__ApiKey=${OPENAI_API_KEY}
    depends_on:
      - sqlserver
      - redis
      - prometheus
    networks:
      - aitaskcoach-network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - aitaskcoach-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aitaskcoach-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - aitaskcoach-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana_dashboard_seed.json:/etc/grafana/provisioning/dashboards/dashboard.json
    networks:
      - aitaskcoach-network

volumes:
  sqlserver_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  aitaskcoach-network:
    driver: bridge